#version 430 core

layout(local_size_x = 1, local_size_y = 1) in;
layout(rgba32f, binding = 0) uniform image2D uImageOutput;

uniform vec2 uCameraPosition;
uniform float uCameraScale;
uniform vec4 uBaseColor;

// uniform vec4 uLightColor[128];
uniform vec3 uLightData[128];
uniform int uLightCount;

void main() {
  vec4 color = uBaseColor;
  vec2 size = vec2(imageSize(uImageOutput));

  vec2 coords = vec2( 
    (float(gl_GlobalInvocationID.x) - size.x * 0.5) * uCameraScale + uCameraPosition.x,
    (size.y * 0.5 - float(gl_GlobalInvocationID.y)) * uCameraScale + uCameraPosition.y
  );

  for (int i = 0; i < uLightCount; i++) {
    float dist = distance(uLightData[i].xy, coords);
    if (dist < uLightData[i].z)
    {
      float x = dist / uLightData[i].z;
      // color = mix(color, uLightColor, 1.0 - x);
      color = color * vec4(1.0, 1.0, 1.0, x*x*x);
    }
  }

  imageStore(uImageOutput, ivec2(gl_GlobalInvocationID.xy), color);
}