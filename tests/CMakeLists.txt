function(COPYALL dir)
  file(GLOB files "${dir}/*")
  foreach(filepath ${files})
    get_filename_component(filename ${filepath} NAME)
    foreach(mode IN LISTS ARGN)
      configure_file("${dir}/${filename}" "${mode}/${dir}/${filename}" COPYONLY)
    endforeach()
    configure_file("${dir}/${filename}" "${PROJECT_BINARY_DIR}/${dir}/${filename}" COPYONLY)
    install(FILES "${PROJECT_BINARY_DIR}/${dir}/${filename}" DESTINATION "${dir}")
  endforeach()
endfunction()

include(InstallRequiredSystemLibraries)
set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/../LICENSE")
set(CPACK_PACKAGE_NAME "Flectron")
set(CPACK_PACKAGE_VENDOR "Patryk Janiak")
set(CPACK_PACKAGE_DESCRIPTION "Flectron is a 2D engine written in C++")
set(CPACK_PACKAGE_HOMEPAGE_URL "https://github.com/morswin22/flectron")
# set(CPACK_PACKAGE_ICON "${CMAKE_CURRENT_SOURCE_DIR}/../flectron.png")
set(CPACK_PACKAGE_EXECUTABLES "flectron-demo;Flectron Demo" "flectron-terrain;Terrain Generator")
# set(CPACK_CREATE_DESKTOP_LINKS "flectron-demo;Flectron Demo" "flectron-terrain;Terrain Generator")
set(CPACK_THREADS 0)
include(CPack)

project(flectron-demo)
add_executable(flectron-demo src/demo.cpp)
target_link_libraries(flectron-demo flectron)
install(TARGETS flectron-demo RUNTIME DESTINATION bin COMPONENT demo)
cpack_add_component(demo DISPLAY_NAME "Flectron Demo" DESCRIPTION "Flectron Demo Application")

project(flectron-terrain)
add_executable(flectron-terrain src/terrain.cpp)
target_link_libraries(flectron-terrain flectron)
install(TARGETS flectron-terrain RUNTIME DESTINATION bin COMPONENT terrain)
cpack_add_component(terrain DISPLAY_NAME "Terrain Generator" DESCRIPTION "Uses the Flectron library to generate a terrain")

set(flectron_MODES Debug Release RelWithDebInfo MinSizeRel)
COPYALL("assets" ${flectron_MODES})
COPYALL("shaders" ${flectron_MODES})