function(flectron_copy_all dir)
  file(GLOB files "${dir}/*")
  foreach(filepath ${files})
    get_filename_component(filename ${filepath} NAME)
    foreach(mode IN LISTS ARGN)
      configure_file("${dir}/${filename}" "${mode}/${dir}/${filename}" COPYONLY)
    endforeach()
    configure_file("${dir}/${filename}" "${PROJECT_BINARY_DIR}/${dir}/${filename}" COPYONLY)
    install(FILES "${PROJECT_BINARY_DIR}/${dir}/${filename}" DESTINATION "${dir}")
  endforeach()
endfunction()

function(flectron_add_executable executable_name sources display_name desciption no_console)
  project("flectron-${executable_name}")
  if(no_console)
    if(WIN32)
      add_executable("flectron-${executable_name}" WIN32 ${sources})
      target_compile_definitions("flectron-${executable_name}" PUBLIC "-DFLECTRON_NO_CONSOLE")
    else()
      message(FATAL_ERROR "Unsupported platform for no console mode")
    endif()
  else()
    add_executable("flectron-${executable_name}" ${sources})
  endif()
  target_link_libraries("flectron-${executable_name}" flectron)
  install(TARGETS "flectron-${executable_name}" RUNTIME DESTINATION bin COMPONENT flectron_${executable_name})
  cpack_add_component(flectron_${executable_name} DISPLAY_NAME ${display_name} DESCRIPTION ${desciption} GROUP flectron_examples)
endfunction()

cpack_add_component_group(flectron_examples DISPLAY_NAME "Examples" DESCRIPTION "Flectron Examples")

flectron_add_executable(demo src/demo.cpp "Demo" "Demo Application" true)
flectron_add_executable(terrain src/terrain.cpp "Terrain Generator" "Uses the Flectron library to generate a terrain" false)
flectron_add_executable(piday src/piday.cpp "Pi Day" "Pi Day Celebration" true)

set(flectron_MODES Debug Release RelWithDebInfo MinSizeRel)
flectron_copy_all("assets" ${flectron_MODES})
flectron_copy_all("shaders" ${flectron_MODES})